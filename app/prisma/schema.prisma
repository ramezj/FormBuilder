// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgres"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  forms         Form[]
}

model Form {
  id            String    @id @default(cuid())
  title         String
  userId        String
  user          User @relation(fields: [userId], references: [id])
  fields        Field[]
  responses     Response[]
}
model Field {
  id            String    @id @default(cuid())
  type          String
  label         String
  options       String[]
  formId        String
  form          Form @relation(fields: [formId], references: [id])
  responses     Response[]
}
model Response {
  id            String    @id @default(cuid())
  value         String
  fieldId       String
  field         Field @relation(fields: [fieldId], references: [id])
  formId        String
  form          Form @relation(fields: [formId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}